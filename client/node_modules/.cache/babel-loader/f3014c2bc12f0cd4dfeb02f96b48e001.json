{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrescampovalencia/Desktop/13Dic2020 EcommerceAdmin/client/src/components/vistas/tableProd.js\";\nimport React, { Component } from \"react\"; // with es6\n\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Header from \"../HeaderDash\";\nimport Axios from \"axios\";\nimport Progress from \"../progress\"; // Edit cells values and save them\n\nconst cellEdit = {\n  mode: \"dbclick\",\n  blurToSave: true,\n  beforeSaveCell: onBeforeSaveCell,\n  // a hook for before saving cell\n  afterSaveCell: onAfterSaveCell\n};\nconst selectRowProp = {\n  mode: \"checkbox\",\n  clickToSelect: true\n}; // Start Crud -- Update Table Producto and table Comercio Producto\n\nfunction onAfterSaveCell(row, cellName, cellValue) {\n  alert(`Save column ${cellName} with value ${cellValue}`);\n  console.log(cellName);\n  console.log(cellValue);\n  console.log(row.idProducto);\n  let rowStr = \"\";\n\n  for (const prop in row) {\n    rowStr += prop + \": \" + row[prop] + \"\\n\";\n  }\n\n  alert(\"The updated row :\\n\" + rowStr);\n  const nombreTienda = row.nombreTienda;\n  const nombreProducto = row.nombreProducto;\n  const descripcionProducto = row.descripcionProducto;\n  const precioUnidadProducto = row.precioUnidadProducto;\n  const cantidadProducto = row.cantidadProducto;\n  const idProducto = row.idProducto;\n  const idCategoriaProducto = row.idCategoriaProducto;\n  const nombreCategoria = row.nombreCategoria;\n  const updateProductA1 = {\n    nombreTienda: nombreTienda,\n    nombreProducto: nombreProducto,\n    descripcionProducto: descripcionProducto,\n    precioUnidadProducto: precioUnidadProducto,\n    cantidadProducto: cantidadProducto,\n    idProducto: idProducto,\n    idCategoriaProducto: idCategoriaProducto,\n    nombreCategoria: nombreCategoria\n  };\n  const column = cellName;\n  const value = cellValue;\n  const id = row.idProducto;\n  const updateProductA = {\n    column: column,\n    value: value,\n    id: id\n  };\n  const urlA = \"/updateProductA\"; // table producto\n\n  Axios.post(urlA, updateProductA).then(res => {//\n  }).catch(e => {//handle your errors\n  });\n  const urlB = \"/updateProductB\"; // table comecioProducto\n\n  const updateProductB = {\n    column: column,\n    value: value,\n    id: id\n  };\n  Axios.post(urlB, updateProductB).then(res => {//\n  }).catch(e => {//handle your errors\n  });\n} // End Crud Update Table Producto and table Comercio Producto\n\n\nfunction onBeforeSaveCell(row, cellName, cellValue) {}\n/**        VALIDACIONES\n * validator function pass the user input value and row object. In addition, a bool return value is expected\n */\n\n\nfunction NameValidator(value, row) {\n  const response = {\n    isValid: true,\n    notification: {\n      type: \"success\",\n      msg: \"\",\n      title: \"\"\n    }\n  };\n\n  if (!value) {\n    response.isValid = false;\n    response.notification.type = \"error\";\n    response.notification.msg = \"Value must be inserted\";\n    response.notification.title = \"Requested Value\";\n  } else if (value.length < 8) {\n    response.isValid = false;\n    response.notification.type = \"error\";\n    response.notification.msg = \"Value must have 8+ characters\";\n    response.notification.title = \"Invalid Value\";\n  }\n\n  return response;\n}\n\n_c = NameValidator;\n\nfunction numberValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n\n  if (nan) {\n    return \" must be a integer!\";\n  }\n\n  return true;\n}\n\nexport default class tableProd extends Component {\n  constructor() {\n    super();\n\n    this.fileSelectedHandler = event => {\n      console.log(\"el fileSelectedHandler\" + event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      const formData = new FormData();\n      let url = \"http://andresteccorp.club/TesisAndres/imagenUploadsProductos.php\"; // get the idProducto from state\n\n      var idProducto = this.state.clickedRowID;\n      console.log(\"desde fileUploadHandler\" + idProducto);\n      formData.append(\"fileImageProducto\", this.state.selectedFile);\n      formData.set(\"idProducto\", idProducto);\n      Axios.post(url, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          this.setState({\n            setUploadPorcentage: parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))\n          });\n        }\n      }).then(res => {\n        const auth = res.data;\n        console.log(\"auth----\" + auth);\n        console.log(\"auth----\" + auth.length);\n\n        if (auth) {\n          alert(\"Imagen subida Satisfactoriamente\");\n        }\n\n        if (this.state.setUploadPorcentage == 100) {\n          this.componentDidMount();\n        } else {\n          alert(\"Problemas en Subir Imagen\" + \"\\nTratar de Nuevo\");\n        }\n      }).catch(e => {//handle your errors\n      });\n    };\n\n    this.state = {\n      products: [],\n      lastId: [],\n      selectedFile: null,\n      setUploadPorcentage: 0,\n      setUploadFile: \"\",\n      productUpload: \"\",\n      idProducto: \"\",\n      clickedRowID: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/productoInfo\").then(res => res.json()).then(products => this.setState({\n      products\n    }, () => console.log(\"products fetched...\", products)));\n    fetch(\"/maxIdProduct\").then(res => res.json()).then(lastId => this.setState({\n      lastId\n    }, () => console.log(\"lastId -- from table product fetched...\", lastId)));\n  } // ********************* Metodos del CRUD de la tabla *************** \\\\\n\n\n  handleTableComplete(row) {}\n\n  handleInsertedRow(row) {\n    let newRowStr = \" \";\n\n    for (const prop in row) {\n      newRowStr += prop + \": \" + row[prop] + \" \\n\";\n    }\n\n    alert(\"The new row is:\\n \" + newRowStr);\n    const urlA = \"/insertProductA\";\n    const urlB = \"insertProductB\";\n    var idCate = row.nombreCategoria === \"Comida\" ? 1 : 6;\n    const productInsertA = {\n      namePrIns: row.nombreProducto,\n      idCatePrIns: idCate\n    };\n    const productInsertB = {\n      cantProducto: row.cantidadProducto,\n      precioProducto: row.precioUnidadProducto,\n      descrProd: row.descripcionProducto\n    };\n    Axios.post(urlA, productInsertA).then(res => {//\n    }).catch(e => {//handle your errors\n    });\n    Axios.post(urlB, productInsertB).then(res => {//\n    }).catch(e => {//handle your errors\n    });\n  } // cant delete a product that its in pedido process\n\n\n  handleDeletedRow(rowKeys) {\n    const idRowProd = rowKeys;\n    alert(\"El producto a eliminar es: \" + idRowProd);\n    const deleteP = {\n      delProduct: rowKeys\n    };\n    console.log(deleteP);\n    const urlA = \"/deleteProduct\";\n    Axios.post(urlA, deleteP).then(res => {\n      const auth = res.data;\n      console.log(\"desde tablepro--\" + res.data.err);\n\n      if (auth.err === true) {\n        alert(\"Producto No Se Puede Eliminar \\n\" + \"Producto Se Encuentra En Proceso De Venta\");\n        res.end();\n      } else if (auth.err === false) {\n        alert(\"Producto Eliminado\");\n        res.end();\n      }\n    }).catch(e => {//\n    });\n  }\n\n  priceFormatter(cell) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$\", cell]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }, this);\n  } // Methods that upload Imagefile and render image from DB\n\n\n  buttonImageUpload(cell) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 80,\n          height: 100,\n          marginBottom: 20\n        },\n        src: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.fileSelectedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 100,\n          height: 50\n        },\n        onClick: () => this.fileUploadHandler(),\n        children: \"UploadFile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 100,\n          height: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Progress, {\n          percentage: this.state.setUploadPorcentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n\n  onRowClick(row) {\n    this.setState({\n      clickedRowID: row.idProducto\n    });\n  }\n\n  render() {\n    this.onRowClick = this.onRowClick.bind(this);\n    console.log(\"clickedRowEstado\" + this.state.clickedRowID);\n    const options = {\n      afterTableComplete: this.handleTableComplete,\n      afterDeleteRow: this.handleDeletedRow,\n      afterInsertRow: this.handleInsertedRow,\n      insertBtn: this.createCustomInsertButton,\n      onRowClick: this.onRowClick\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title1: \"Informacion Productos Comercio\",\n        title2: \"Home\",\n        ruta: \"/homeAdmin\",\n        opcion1: \"Log-Out\",\n        rutaOpcion1: \"\",\n        opcion2: \"CompraProducto\",\n        rutaOpcion2: \"/productShop\",\n        opcion3: \"OfertaProducto\",\n        rutaOpcion3: \"/tableOfert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 60,\n          fontFamily: \"fantasy\",\n          marginTop: \"50px\",\n          marginLeft: \"100px\"\n        },\n        children: \"Productos del Comercio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: 25,\n          fontFamily: \"fantasy\",\n          marginTop: \"25px\",\n          marginLeft: \"100px\"\n        },\n        children: [\" \", \"No se puede eliminar mas de un producto diferente simult\\xE1neamente\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), \" Si el producto se encuentra en proceso de Venta no se puede\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), \" Si el producto se encuentra en proceso de Pedido no se puede eliminar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"70px\" //     marginLeft: \"150px\",\n          //     marginRight: \"150px\"\n\n        },\n        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          data: this.state.products,\n          striped: true,\n          selectRow: selectRowProp,\n          exportCSV: true,\n          deleteRow: true,\n          cellEdit: cellEdit,\n          options: options,\n          children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            editable: false,\n            dataField: \"idProducto\",\n            isKey: true,\n            children: \"Catalogo ProductoId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            editable: false,\n            dataField: \"nombreProducto\",\n            filter: {\n              type: \"TextFilter\",\n              delay: 1000\n            },\n            children: \"Producto Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            filter: {\n              type: \"NumberFilter\",\n              delay: 1000\n            },\n            dataField: \"idComercioProducto\",\n            editable: false,\n            children: \"Codigo ProductoComercio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            editable: false,\n            width: \"150\",\n            dataField: \"nombreCategoria\",\n            children: \"Producto Categoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"descripcionProducto\",\n            editable: {\n              validator: NameValidator\n            },\n            children: \"Producto Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"cantidadProducto\",\n            children: \"Producto Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataFormat: this.priceFormatter,\n            dataField: \"precioUnidadProducto\",\n            children: \"Producto Precio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"imagenProducto\",\n            dataFormat: this.buttonImageUpload.bind(this),\n            editable: false,\n            children: \"Imagen Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NameValidator\");","map":{"version":3,"sources":["/Users/andrescampovalencia/Desktop/13Dic2020 EcommerceAdmin/client/src/components/vistas/tableProd.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","Header","Axios","Progress","cellEdit","mode","blurToSave","beforeSaveCell","onBeforeSaveCell","afterSaveCell","onAfterSaveCell","selectRowProp","clickToSelect","row","cellName","cellValue","alert","console","log","idProducto","rowStr","prop","nombreTienda","nombreProducto","descripcionProducto","precioUnidadProducto","cantidadProducto","idCategoriaProducto","nombreCategoria","updateProductA1","column","value","id","updateProductA","urlA","post","then","res","catch","e","urlB","updateProductB","NameValidator","response","isValid","notification","type","msg","title","length","numberValidator","nan","isNaN","parseInt","tableProd","constructor","fileSelectedHandler","event","target","files","setState","selectedFile","fileUploadHandler","formData","FormData","url","state","clickedRowID","append","set","headers","onUploadProgress","progressEvent","setUploadPorcentage","Math","round","loaded","total","auth","data","componentDidMount","products","lastId","setUploadFile","productUpload","fetch","json","handleTableComplete","handleInsertedRow","newRowStr","idCate","productInsertA","namePrIns","idCatePrIns","productInsertB","cantProducto","precioProducto","descrProd","handleDeletedRow","rowKeys","idRowProd","deleteP","delProduct","err","end","priceFormatter","cell","buttonImageUpload","width","height","marginBottom","onRowClick","render","bind","options","afterTableComplete","afterDeleteRow","afterInsertRow","insertBtn","createCustomInsertButton","fontSize","fontFamily","marginTop","marginLeft","delay","validator"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// with es6\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Header from \"../HeaderDash\";\nimport Axios from \"axios\";\nimport Progress from \"../progress\";\n\n// Edit cells values and save them\nconst cellEdit = {\n  mode: \"dbclick\",\n  blurToSave: true,\n  beforeSaveCell: onBeforeSaveCell, // a hook for before saving cell\n  afterSaveCell: onAfterSaveCell,\n};\n\nconst selectRowProp = {\n  mode: \"checkbox\",\n  clickToSelect: true,\n};\n\n// Start Crud -- Update Table Producto and table Comercio Producto\nfunction onAfterSaveCell(row, cellName, cellValue) {\n  alert(`Save column ${cellName} with value ${cellValue}`);\n  console.log(cellName);\n  console.log(cellValue);\n  console.log(row.idProducto);\n  let rowStr = \"\";\n  for (const prop in row) {\n    rowStr += prop + \": \" + row[prop] + \"\\n\";\n  }\n  alert(\"The updated row :\\n\" + rowStr);\n  const nombreTienda = row.nombreTienda;\n  const nombreProducto = row.nombreProducto;\n  const descripcionProducto = row.descripcionProducto;\n  const precioUnidadProducto = row.precioUnidadProducto;\n  const cantidadProducto = row.cantidadProducto;\n  const idProducto = row.idProducto;\n  const idCategoriaProducto = row.idCategoriaProducto;\n  const nombreCategoria = row.nombreCategoria;\n\n  const updateProductA1 = {\n    nombreTienda: nombreTienda,\n    nombreProducto: nombreProducto,\n    descripcionProducto: descripcionProducto,\n    precioUnidadProducto: precioUnidadProducto,\n    cantidadProducto: cantidadProducto,\n    idProducto: idProducto,\n    idCategoriaProducto: idCategoriaProducto,\n    nombreCategoria: nombreCategoria,\n  };\n\n  const column = cellName;\n  const value = cellValue;\n  const id = row.idProducto;\n\n  const updateProductA = {\n    column: column,\n    value: value,\n    id: id,\n  };\n  const urlA = \"/updateProductA\"; // table producto\n  Axios.post(urlA, updateProductA)\n    .then((res) => {\n      //\n    })\n    .catch((e) => {\n      //handle your errors\n    });\n\n  const urlB = \"/updateProductB\"; // table comecioProducto\n  const updateProductB = {\n    column: column,\n    value: value,\n    id: id,\n  };\n\n  Axios.post(urlB, updateProductB)\n    .then((res) => {\n      //\n    })\n    .catch((e) => {\n      //handle your errors\n    });\n}\n// End Crud Update Table Producto and table Comercio Producto\n\nfunction onBeforeSaveCell(row, cellName, cellValue) {}\n\n/**        VALIDACIONES\n * validator function pass the user input value and row object. In addition, a bool return value is expected\n */\nfunction NameValidator(value, row) {\n  const response = {\n    isValid: true,\n    notification: { type: \"success\", msg: \"\", title: \"\" },\n  };\n  if (!value) {\n    response.isValid = false;\n    response.notification.type = \"error\";\n    response.notification.msg = \"Value must be inserted\";\n    response.notification.title = \"Requested Value\";\n  } else if (value.length < 8) {\n    response.isValid = false;\n    response.notification.type = \"error\";\n    response.notification.msg = \"Value must have 8+ characters\";\n    response.notification.title = \"Invalid Value\";\n  }\n  return response;\n}\n\nfunction numberValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return \" must be a integer!\";\n  }\n  return true;\n}\n\nexport default class tableProd extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      lastId: [],\n      selectedFile: null,\n      setUploadPorcentage: 0,\n      setUploadFile: \"\",\n      productUpload: \"\",\n      idProducto: \"\",\n      clickedRowID: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/productoInfo\")\n      .then((res) => res.json())\n      .then((products) =>\n        this.setState({ products }, () =>\n          console.log(\"products fetched...\", products)\n        )\n      );\n\n    fetch(\"/maxIdProduct\")\n      .then((res) => res.json())\n      .then((lastId) =>\n        this.setState({ lastId }, () =>\n          console.log(\"lastId -- from table product fetched...\", lastId)\n        )\n      );\n  }\n\n  // ********************* Metodos del CRUD de la tabla *************** \\\\\n\n  handleTableComplete(row) {}\n\n  handleInsertedRow(row) {\n    let newRowStr = \" \";\n    for (const prop in row) {\n      newRowStr += prop + \": \" + row[prop] + \" \\n\";\n    }\n\n    alert(\"The new row is:\\n \" + newRowStr);\n\n    const urlA = \"/insertProductA\";\n    const urlB = \"insertProductB\";\n    var idCate = row.nombreCategoria === \"Comida\" ? 1 : 6;\n\n    const productInsertA = {\n      namePrIns: row.nombreProducto,\n\n      idCatePrIns: idCate,\n    };\n\n    const productInsertB = {\n      cantProducto: row.cantidadProducto,\n      precioProducto: row.precioUnidadProducto,\n      descrProd: row.descripcionProducto,\n    };\n\n    Axios.post(urlA, productInsertA)\n      .then((res) => {\n        //\n      })\n      .catch((e) => {\n        //handle your errors\n      });\n\n    Axios.post(urlB, productInsertB)\n      .then((res) => {\n        //\n      })\n      .catch((e) => {\n        //handle your errors\n      });\n  }\n\n  // cant delete a product that its in pedido process\n  handleDeletedRow(rowKeys) {\n    const idRowProd = rowKeys;\n    alert(\"El producto a eliminar es: \" + idRowProd);\n\n    const deleteP = {\n      delProduct: rowKeys,\n    };\n    console.log(deleteP);\n\n    const urlA = \"/deleteProduct\";\n    Axios.post(urlA, deleteP)\n      .then((res) => {\n        const auth = res.data;\n\n        console.log(\"desde tablepro--\" + res.data.err);\n        if (auth.err === true) {\n          alert(\n            \"Producto No Se Puede Eliminar \\n\" +\n              \"Producto Se Encuentra En Proceso De Venta\"\n          );\n          res.end();\n        } else if (auth.err === false) {\n          alert(\"Producto Eliminado\");\n\n          res.end();\n        }\n      })\n      .catch((e) => {\n        //\n      });\n  }\n\n  priceFormatter(cell) {\n    return <p>${cell}</p>;\n  }\n\n  // Methods that upload Imagefile and render image from DB\n\n  fileSelectedHandler = (event) => {\n    console.log(\"el fileSelectedHandler\" + event.target.files[0]);\n\n    this.setState({\n      selectedFile: event.target.files[0],\n    });\n  };\n\n  fileUploadHandler = () => {\n    const formData = new FormData();\n\n    let url =\n      \"http://andresteccorp.club/TesisAndres/imagenUploadsProductos.php\";\n\n    // get the idProducto from state\n\n    var idProducto = this.state.clickedRowID;\n\n    console.log(\"desde fileUploadHandler\" + idProducto);\n    formData.append(\"fileImageProducto\", this.state.selectedFile);\n\n    formData.set(\"idProducto\", idProducto);\n\n    Axios.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n\n      onUploadProgress: (progressEvent) => {\n        this.setState({\n          setUploadPorcentage: parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          ),\n        });\n      },\n    })\n\n      .then((res) => {\n        const auth = res.data;\n\n        console.log(\"auth----\" + auth);\n\n        console.log(\"auth----\" + auth.length);\n        if (auth) {\n          alert(\"Imagen subida Satisfactoriamente\");\n        }\n        if (this.state.setUploadPorcentage == 100) {\n          this.componentDidMount();\n        } else {\n          alert(\"Problemas en Subir Imagen\" + \"\\nTratar de Nuevo\");\n        }\n      })\n      .catch((e) => {\n        //handle your errors\n      });\n  };\n\n  buttonImageUpload(cell) {\n    return (\n      <div>\n        <img style={{ width: 80, height: 100, marginBottom: 20 }} src={cell} />\n        <input type=\"file\" name=\"file\" onChange={this.fileSelectedHandler} />\n        <button\n          style={{\n            width: 100,\n            height: 50,\n          }}\n          onClick={() => this.fileUploadHandler()}\n        >\n          UploadFile\n        </button>\n        <div\n          style={{\n            width: 100,\n            height: 20,\n          }}\n        >\n          <Progress percentage={this.state.setUploadPorcentage} />\n        </div>\n      </div>\n    );\n  }\n\n  onRowClick(row) {\n    this.setState({ clickedRowID: row.idProducto });\n  }\n  render() {\n    this.onRowClick = this.onRowClick.bind(this);\n    console.log(\"clickedRowEstado\" + this.state.clickedRowID);\n    const options = {\n      afterTableComplete: this.handleTableComplete,\n      afterDeleteRow: this.handleDeletedRow,\n      afterInsertRow: this.handleInsertedRow,\n      insertBtn: this.createCustomInsertButton,\n      onRowClick: this.onRowClick,\n    };\n\n    return (\n      <div>\n        <Header\n          title1=\"Informacion Productos Comercio\"\n          title2=\"Home\"\n          ruta=\"/homeAdmin\"\n          opcion1=\"Log-Out\"\n          rutaOpcion1=\"\"\n          opcion2=\"CompraProducto\"\n          rutaOpcion2=\"/productShop\"\n          opcion3=\"OfertaProducto\"\n          rutaOpcion3=\"/tableOfert\"\n        />\n\n        <h1\n          style={{\n            fontSize: 60,\n            fontFamily: \"fantasy\",\n            marginTop: \"50px\",\n            marginLeft: \"100px\",\n          }}\n        >\n          Productos del Comercio\n        </h1>\n        <h3\n          style={{\n            fontSize: 25,\n            fontFamily: \"fantasy\",\n            marginTop: \"25px\",\n            marginLeft: \"100px\",\n          }}\n        >\n          {\" \"}\n          No se puede eliminar mas de un producto diferente simultáneamente{\" \"}\n          <br /> Si el producto se encuentra en proceso de Venta no se puede\n          <br /> Si el producto se encuentra en proceso de Pedido no se puede\n          eliminar\n        </h3>\n\n        <div\n          style={{\n            marginTop: \"70px\",\n            //     marginLeft: \"150px\",\n            //     marginRight: \"150px\"\n          }}\n        >\n          <BootstrapTable\n            data={this.state.products}\n            striped\n            selectRow={selectRowProp}\n            exportCSV\n            deleteRow={true}\n            cellEdit={cellEdit}\n            options={options}\n          >\n            <TableHeaderColumn\n              width=\"150\"\n              editable={false}\n              dataField=\"idProducto\"\n              isKey={true}\n            >\n              Catalogo ProductoId\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              width=\"150\"\n              editable={false}\n              dataField=\"nombreProducto\"\n              filter={{ type: \"TextFilter\", delay: 1000 }}\n            >\n              Producto Nombre\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              width=\"150\"\n              filter={{ type: \"NumberFilter\", delay: 1000 }}\n              dataField=\"idComercioProducto\"\n              editable={false}\n            >\n              Codigo ProductoComercio\n            </TableHeaderColumn>\n\n            <TableHeaderColumn\n              editable={false}\n              width=\"150\"\n              dataField=\"nombreCategoria\"\n            >\n              Producto Categoria\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              width=\"150\"\n              dataField=\"descripcionProducto\"\n              editable={{ validator: NameValidator }}\n            >\n              Producto Descripción\n            </TableHeaderColumn>\n\n            <TableHeaderColumn width=\"150\" dataField=\"cantidadProducto\">\n              Producto Stock\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              width=\"150\"\n              dataFormat={this.priceFormatter}\n              dataField=\"precioUnidadProducto\"\n            >\n              Producto Precio\n            </TableHeaderColumn>\n            <TableHeaderColumn\n              width=\"150\"\n              dataField=\"imagenProducto\"\n              dataFormat={this.buttonImageUpload.bind(this)}\n              editable={false}\n            >\n              Imagen Producto\n            </TableHeaderColumn>\n          </BootstrapTable>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}