{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrescampovalencia/Desktop/EcommerceAdminPlataform-master/client/src/components/vistas/tableOfert.js\";\nimport React, { Component } from \"react\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Header from \"../HeaderDash\";\nimport Axios from \"axios\"; //mport \"node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\n\nconst selectRow = {\n  mode: \"radio\",\n  clickToSelect: true\n};\nconst cellEdit = {\n  mode: \"dbclick\",\n  blurToSave: true,\n  // beforeSaveCell: onBeforeSaveCell, // a hook for before saving cell\n  afterSaveCell: onAfterSaveCell\n};\n\nfunction numberValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n\n  if (nan) {\n    return \" Debe de ser un Numero Entero!\";\n  }\n\n  return true;\n}\n\nconst productOfertAmount = [\"\", \"Bono\", \"Descuento\", \"Promo2*1\", \"Promo3*1\"]; // Start Crud Update Table ofertaProducto and table Comercio Producto\n\nfunction onAfterSaveCell(row, cellName, cellValue) {\n  alert(`Save column ${cellName} with value ${cellValue}`); // console.log(cellName);\n  // console.log(cellValue);\n  // console.log(row.idComercioProducto);\n\n  let rowStr = \"\";\n\n  for (const prop in row) {\n    rowStr += prop + \": \" + row[prop] + \"\\n\";\n  }\n\n  alert(\"The updated row :\\n\" + rowStr);\n  var TipoOfertaId = row.tipoOferta === \"Bono\" ? 1 : row.tipoOferta === \"Descuento\" ? 2 : row.tipoOferta === \"Promo2*1\" ? 3 : 4;\n  var Column = cellName === \"tipoOferta\" ? \"codigoOferta\" : \"descuento\";\n  const updateOferta = {\n    Column: Column,\n    Value: cellName === \"descuento\" ? cellValue : cellName === \"tipoOferta\" ? TipoOfertaId : \"\",\n    TipoOfertaId: TipoOfertaId,\n    Codigo: row.idComercioProducto\n  };\n  console.log(updateOferta);\n  const url = \"/updateOferta\"; // table oferta\n\n  Axios.post(url, updateOferta).then(res => {//\n  }).catch(e => {//handle your errors\n  });\n} // End Crud Update Table Producto and table Comercio Producto\n\n\nexport default class tableOfert extends Component {\n  constructor() {\n    super();\n\n    this.handleInsertedRow = row => {\n      let newRowStr = \" \";\n\n      for (const prop in row) {\n        newRowStr += prop + \": \" + row[prop] + \" \\n\";\n      }\n\n      alert(\"La nueva Oferta Es:\\n \" + newRowStr);\n      var TipoOfertaId = row.tipoOferta === \"Bono\" ? 1 : row.tipoOferta === \"Descuento\" ? 2 : row.tipoOferta === \"Promo2*1\" ? 3 : 4;\n      const url1 = \"/insertOfert\";\n      const ofertInsert = {\n        CodigoProductoComercio: row.idComercioProducto,\n        TipoOfertaId: TipoOfertaId,\n        DescuentoOferta: row.descuento\n      };\n      console.log(ofertInsert);\n      Axios.post(url1, ofertInsert).then(resp => {\n        const auth = resp.data;\n        console.log(resp.data.oferta);\n        console.log(auth);\n\n        if (auth.oferta === true) {\n          alert(\"Oferta Establecida Satisfactoriamente\");\n          this.componentDidMount();\n        } else {\n          alert(\"Oferta No Establecida\" + \"\\nPorfavor revisar el codigo Comercio-Producto\");\n        }\n      });\n    };\n\n    this.state = {\n      ofertInfo: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/ofertInfo\").then(res => res.json()).then(ofertInfo => this.setState({\n      ofertInfo\n    }, () => console.log(\"ofertInfo fetched...\", ofertInfo)));\n  } // Crud of Oferts\n\n\n  handleDeletedRow(rowKeys) {\n    const idRowProd = rowKeys;\n    alert(\"La Oferta a eliminar es del Commercio/ProductoId : \" + idRowProd);\n    const deleteO = {\n      idComercioProducto: rowKeys\n    };\n    console.log(deleteO);\n    const url = \"/deleteOfert\";\n    Axios.post(url, deleteO).then(res => {//\n    }).catch(e => {//\n    });\n  }\n\n  render() {\n    console.log(\"el estado\" + this.state.ofertInfo);\n    const options = {\n      afterTableComplete: this.handleTableComplete,\n      afterDeleteRow: this.handleDeletedRow,\n      afterInsertRow: this.handleInsertedRow\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          title1: \"Informacion Ofertas Comercio\",\n          title2: \"Home\",\n          ruta: \"/homeAdmin\",\n          opcion1: \"Log-Out\",\n          rutaOpcion1: \"\",\n          opcion2: \"InfoProducto\",\n          rutaOpcion2: \"/tableProd\",\n          opcion3: \"opcion3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: 60,\n            fontFamily: \"fantasy\",\n            marginTop: \"30px\",\n            marginLeft: \"100px\"\n          },\n          children: \"Ofertas Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"50px\",\n          marginLeft: \"150px\",\n          marginRight: \"150px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n          data: this.state.ofertInfo,\n          striped: true,\n          hover: true,\n          condensed: true,\n          insertRow: true,\n          selectRow: selectRow,\n          exportCSV: true,\n          deleteRow: true,\n          cellEdit: cellEdit,\n          options: options,\n          children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"idComercioProducto\" // hiddenOnInsert\n            ,\n            isKey: true,\n            filter: {\n              type: \"NumberFilter\",\n              delay: 1000\n            },\n            children: \"Codigo ProductoComercio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"nombreProducto\",\n            hiddenOnInsert: true,\n            editable: false //   filter={{ type: \"TextFilter\", delay: 1000 }}\n            ,\n            children: \"Nombre Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            editable: false,\n            dataField: \"tipoOferta\",\n            editable: {\n              type: \"select\",\n              options: {\n                values: productOfertAmount\n              }\n            } //  dataField=\"Tipo Oferta Bono\"\n            ,\n            children: \"Tipo Oferta Producto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n            width: \"150\",\n            dataField: \"descuento\",\n            editable: {},\n            children: \"Compensacion %\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andrescampovalencia/Desktop/EcommerceAdminPlataform-master/client/src/components/vistas/tableOfert.js"],"names":["React","Component","BootstrapTable","TableHeaderColumn","Header","Axios","selectRow","mode","clickToSelect","cellEdit","blurToSave","afterSaveCell","onAfterSaveCell","numberValidator","value","row","nan","isNaN","parseInt","productOfertAmount","cellName","cellValue","alert","rowStr","prop","TipoOfertaId","tipoOferta","Column","updateOferta","Value","Codigo","idComercioProducto","console","log","url","post","then","res","catch","e","tableOfert","constructor","handleInsertedRow","newRowStr","url1","ofertInsert","CodigoProductoComercio","DescuentoOferta","descuento","resp","auth","data","oferta","componentDidMount","state","ofertInfo","fetch","json","setState","handleDeletedRow","rowKeys","idRowProd","deleteO","render","options","afterTableComplete","handleTableComplete","afterDeleteRow","afterInsertRow","fontSize","fontFamily","marginTop","marginLeft","marginRight","type","delay","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Header from \"../HeaderDash\";\nimport Axios from \"axios\";\n//mport \"node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\n\nconst selectRow = {\n  mode: \"radio\",\n  clickToSelect: true,\n};\nconst cellEdit = {\n  mode: \"dbclick\",\n  blurToSave: true,\n  // beforeSaveCell: onBeforeSaveCell, // a hook for before saving cell\n  afterSaveCell: onAfterSaveCell,\n};\n\nfunction numberValidator(value, row) {\n  const nan = isNaN(parseInt(value, 10));\n  if (nan) {\n    return \" Debe de ser un Numero Entero!\";\n  }\n  return true;\n}\nconst productOfertAmount = [\"\", \"Bono\", \"Descuento\", \"Promo2*1\", \"Promo3*1\"];\n\n// Start Crud Update Table ofertaProducto and table Comercio Producto\nfunction onAfterSaveCell(row, cellName, cellValue) {\n  alert(`Save column ${cellName} with value ${cellValue}`);\n  // console.log(cellName);\n  // console.log(cellValue);\n\n  // console.log(row.idComercioProducto);\n\n  let rowStr = \"\";\n  for (const prop in row) {\n    rowStr += prop + \": \" + row[prop] + \"\\n\";\n  }\n  alert(\"The updated row :\\n\" + rowStr);\n  var TipoOfertaId =\n    row.tipoOferta === \"Bono\"\n      ? 1\n      : row.tipoOferta === \"Descuento\"\n      ? 2\n      : row.tipoOferta === \"Promo2*1\"\n      ? 3\n      : 4;\n  var Column = cellName === \"tipoOferta\" ? \"codigoOferta\" : \"descuento\";\n  const updateOferta = {\n    Column: Column,\n\n    Value:\n      cellName === \"descuento\"\n        ? cellValue\n        : cellName === \"tipoOferta\"\n        ? TipoOfertaId\n        : \"\",\n    TipoOfertaId: TipoOfertaId,\n    Codigo: row.idComercioProducto,\n  };\n  console.log(updateOferta);\n  const url = \"/updateOferta\"; // table oferta\n  Axios.post(url, updateOferta)\n    .then((res) => {\n      //\n    })\n    .catch((e) => {\n      //handle your errors\n    });\n}\n// End Crud Update Table Producto and table Comercio Producto\n\nexport default class tableOfert extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ofertInfo: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\"/ofertInfo\")\n      .then((res) => res.json())\n      .then((ofertInfo) =>\n        this.setState({ ofertInfo }, () =>\n          console.log(\"ofertInfo fetched...\", ofertInfo)\n        )\n      );\n  }\n\n  // Crud of Oferts\n  handleDeletedRow(rowKeys) {\n    const idRowProd = rowKeys;\n    alert(\"La Oferta a eliminar es del Commercio/ProductoId : \" + idRowProd);\n\n    const deleteO = {\n      idComercioProducto: rowKeys,\n    };\n    console.log(deleteO);\n\n    const url = \"/deleteOfert\";\n    Axios.post(url, deleteO)\n      .then((res) => {\n        //\n      })\n      .catch((e) => {\n        //\n      });\n  }\n\n  handleInsertedRow = (row) => {\n    let newRowStr = \" \";\n    for (const prop in row) {\n      newRowStr += prop + \": \" + row[prop] + \" \\n\";\n    }\n\n    alert(\"La nueva Oferta Es:\\n \" + newRowStr);\n\n    var TipoOfertaId =\n      row.tipoOferta === \"Bono\"\n        ? 1\n        : row.tipoOferta === \"Descuento\"\n        ? 2\n        : row.tipoOferta === \"Promo2*1\"\n        ? 3\n        : 4;\n\n    const url1 = \"/insertOfert\";\n    const ofertInsert = {\n      CodigoProductoComercio: row.idComercioProducto,\n      TipoOfertaId: TipoOfertaId,\n      DescuentoOferta: row.descuento,\n    };\n\n    console.log(ofertInsert);\n    Axios.post(url1, ofertInsert).then((resp) => {\n      const auth = resp.data;\n      console.log(resp.data.oferta);\n      console.log(auth);\n      if (auth.oferta === true) {\n        alert(\"Oferta Establecida Satisfactoriamente\");\n        this.componentDidMount();\n      } else {\n        alert(\n          \"Oferta No Establecida\" +\n            \"\\nPorfavor revisar el codigo Comercio-Producto\"\n        );\n      }\n    });\n  };\n\n  render() {\n    console.log(\"el estado\" + this.state.ofertInfo);\n    const options = {\n      afterTableComplete: this.handleTableComplete,\n      afterDeleteRow: this.handleDeletedRow,\n      afterInsertRow: this.handleInsertedRow,\n    };\n    return (\n      <div>\n        <div>\n          <Header\n            title1=\"Informacion Ofertas Comercio\"\n            title2=\"Home\"\n            ruta=\"/homeAdmin\"\n            opcion1=\"Log-Out\"\n            rutaOpcion1=\"\"\n            opcion2=\"InfoProducto\"\n            rutaOpcion2=\"/tableProd\"\n            opcion3=\"opcion3\"\n          />\n        </div>\n        <div>\n          <h1\n            style={{\n              fontSize: 60,\n              fontFamily: \"fantasy\",\n              marginTop: \"30px\",\n              marginLeft: \"100px\",\n            }}\n          >\n            Ofertas Producto\n          </h1>\n        </div>\n        <div\n          style={{\n            marginTop: \"50px\",\n            marginLeft: \"150px\",\n            marginRight: \"150px\",\n          }}\n        >\n          <BootstrapTable\n            data={this.state.ofertInfo}\n            striped\n            hover\n            condensed\n            insertRow={true}\n            selectRow={selectRow}\n            exportCSV\n            deleteRow={true}\n            cellEdit={cellEdit}\n            options={options}\n          >\n            <TableHeaderColumn\n              width=\"150\"\n              dataField=\"idComercioProducto\"\n              // hiddenOnInsert\n              isKey={true}\n              filter={{ type: \"NumberFilter\", delay: 1000 }}\n            >\n              Codigo ProductoComercio\n            </TableHeaderColumn>\n\n            <TableHeaderColumn\n              width=\"150\"\n              dataField=\"nombreProducto\"\n              hiddenOnInsert\n              editable={false}\n              //   filter={{ type: \"TextFilter\", delay: 1000 }}\n            >\n              Nombre Producto\n            </TableHeaderColumn>\n\n            <TableHeaderColumn\n              width=\"150\"\n              editable={false}\n              dataField=\"tipoOferta\"\n              editable={{\n                type: \"select\",\n                options: { values: productOfertAmount },\n              }}\n              //  dataField=\"Tipo Oferta Bono\"\n            >\n              Tipo Oferta Producto\n            </TableHeaderColumn>\n            <TableHeaderColumn width=\"150\" dataField=\"descuento\" editable={{}}>\n              Compensacion %\n            </TableHeaderColumn>\n          </BootstrapTable>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}